---
title: "Modelando la epidemia por el nuevo coronavirus en Oaxaca"
author: "Juan Pablo Diaz-Martinez"
date: '2020-07-09'
categories: Predictive Modeling
bibliography: biblio.bib
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: yes
lastmod: '2020-07-09T22:52:06-04:00'
projects: []
slug: modelando-la-epidemia-por-el-nuevo-coronavirus-en-oaxaca
subtitle: ''
summary: 'Using a bayesian semi-mechanistic model, this project aims to predict hospitalizations and deaths from suspect COVID-19 patients who were hospitalized in the state of Oaxaca (Post is written in spanish)'
tags:
- COVID-19
- R
authors: []
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F)
library(tidyverse)
library(lubridate)
library(countrycode)
library(ggrepel)
library(prismatic)
library(ggsci)
library(paletteer)
library(distcrete)
library(magrittr)
library(rstan)
library(data.table)
library(gdata)
library(EnvStats)
library(matrixStats)
library(scales)
library(gridExtra)
library(ggpubr)
library(bayesplot)
library(cowplot)
library(plotly)
library(readxl)


pop<-4000000

cama_ocup <- read_excel("cam_ocup.xlsx")

muertes_mx <- 
  read_csv("https://raw.githubusercontent.com/mariorz/covid19-mx-time-series/master/data/covid19_deaths_mx.csv") %>% 
  pivot_longer(-Estado, names_to = "date", values_to = "deaths") %>% 
  mutate(date = dmy(date)) %>% rename(iso3c=Estado) %>% 
  group_by(iso3c)  %>% 
  mutate(new_deaths=c(0,diff(deaths)))  %>% ungroup() %>%
  select(iso3c, date,deaths,new_deaths) 


confirmados_mx <- 
  read_csv("https://raw.githubusercontent.com/mariorz/covid19-mx-time-series/master/data/covid19_confirmed_mx.csv") %>% 
  pivot_longer(-Estado, names_to = "date", values_to = "confirmed") %>% 
  mutate(date = dmy(date)) %>% rename(iso3c=Estado) %>% 
  group_by(iso3c)  %>% 
  mutate(new_confirmed=c(0,diff(confirmed)))  %>% ungroup() %>%
  select(iso3c, date,confirmed,new_confirmed) 

estados <- confirmados_mx %>%
  full_join(muertes_mx, by = c("iso3c", "date"))

mexico<-estados %>% 
  group_by(date) %>%
  summarise_at(vars(-iso3c),funs(sum)) %>% mutate(iso3c="MEX") %>% bind_rows(estados)


countries<-c("Oaxaca","Ciudad de México","Baja California","México","MEX")


percent <- function(x, digits = 2, format = "f", ...) {
  paste0(formatC(100 * x, format = format, digits = digits, ...), "%")
}

source("geom-stepribbon.r")
#---------------------------------------------------------------------------
load(paste0("base4",'-',"2020-07-08",'-stanfit.Rdata')) # cambiar fecha
load(paste0("mort_hosp",'-stanfit.Rdata'))
data_interventions <- read.csv("interventions.csv", 
                                 stringsAsFactors = FALSE)
covariates <- data_interventions[1, c(1,2,3,4,5,6, 7, 8)]
  
N <- length(dates[[1]])
N2 <- N + 14
country <- "MEX"

estimated_hospi_forecast <- colMeans(estimated.hospi[,1:N2,1])[N:N2]
estimated_hospi_li_forecast <- colQuantiles(estimated.hospi[,1:N2,1], probs=.025)[N:N2]
estimated_hospi_ui_forecast <- colQuantiles(estimated.hospi[,1:N2,1], probs=.975)[N:N2]

estimated_hospi <- colMeans(estimated.hospi[,1:N,1])
estimated_hospi_li <- colQuantiles(estimated.hospi[,1:N,1], probs=.025)
estimated_hospi_ui <- colQuantiles(estimated.hospi[,1:N,1], probs=.975)


estimated_ocu <- colMeans(estimated.ocu[,1:N2,1])
estimated_ocu_li <- colQuantiles(estimated.ocu[,1:N2,1], probs=.025)
estimated_ocu_ui <- colQuantiles(estimated.ocu[,1:N2,1], probs=.975)
 
data_country <- data.frame("time" = as_date(as.character(dates[[1]])),
                           "country" = rep(country, length(dates[[1]])),
                           "reported_hospi" = reported_hospi[[1]],
                           "reported_hospi_c" =  cumsum(reported_hospi[[1]]),
                           "estimated_hospi" = estimated_hospi,
                           "hospi_min" = estimated_hospi_li,
                           "hospi_max"= estimated_hospi_ui,
                           "estimated_hospi_c" = cumsum(estimated_hospi),
                           "hospi_min_c" = cumsum(estimated_hospi_li),
                           "hospi_max_c"= cumsum(estimated_hospi_ui))

times <- as_date(as.character(dates[[1]]))
times_forecast <- times[length(times)] + 0:14

ocup<-data.frame("time" = times[1]+0:(length(estimated_ocu)-1),
                           "estimated_ocu" = estimated_ocu,
                           "ocu_min" = estimated_ocu_li,
                           "ocu_max"= estimated_ocu_ui,
                           "estimated_ocu_c" = cumsum(estimated_ocu),
                           "ocu_min_c" = cumsum(estimated_ocu_li),
                           "ocu_max_c"= cumsum(estimated_ocu_ui))



data_country_forecast <- data.frame("time" = times_forecast,
                                    "estimated_hospi_forecast_c" = cumsum(estimated_hospi_forecast)+head(tail(data_country$estimated_hospi_c, n=2), n=1),
                                    "hospi_min_c" = cumsum(estimated_hospi_li_forecast)+head(tail(data_country$hospi_min_c, n=2), n=1),
                                    "hospi_max_c"= cumsum(estimated_hospi_ui_forecast)+head(tail(data_country$hospi_max_c, n=2), n=1),
                                    "estimated_hospi_forecast" = estimated_hospi_forecast,
                                    "hospi_min" = estimated_hospi_li_forecast,
                                    "hospi_max"= estimated_hospi_ui_forecast)



# ggplot(data_country) +
#   geom_bar(data = data_country, aes(x = time, y = reported_hospi_c), 
#            fill = "coral3", stat='identity', alpha=0.5) + 
#   geom_line(data = data_country, aes(x = time, y = estimated_hospi_c), 
#             col = "deepskyblue4") + 
#   geom_line(data = data_country_forecast, 
#             aes(x = time, y = estimated_hospi_forecast_c), 
#             col = "deepskyblue4", alpha = 0.5) + 
#   # geom_line(data = data_country_cf, 
#   #           aes(x = time, y = estimated_deaths_cf), 
#   #           col = "red", alpha = 0.5)+
#   geom_ribbon(data = data_country, aes(x = time, 
#                                        ymin = hospi_min_c, 
#                                        ymax = hospi_max_c),
#               fill="deepskyblue4", alpha=0.3) +
#   geom_ribbon(data = data_country_forecast, 
#               aes(x = time, 
#                   ymin = hospi_min_c, 
#                   ymax = hospi_max_c),
#               fill = "deepskyblue4", alpha=0.35) +
#   # geom_ribbon(data = data_country_cf, 
#   #             aes(x = time, 
#   #                 ymin = death_min_cf, 
#   #                 ymax = death_max_cf),
#   #             fill = "red", alpha=0.35)+
#   geom_vline(xintercept = data_country$time[length(data_country$time)], 
#              col = "black", linetype = "dashed", alpha = 0.5) + 
#   scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
#   #scale_fill_manual(name = "", 
#   #                 labels = c("Confirmed deaths", "Predicted deaths"),
#   #                 values = c("coral4", "deepskyblue4")) + 
#   xlab("") +
#   ylab("Número acumulado de hospitalizaciones") + 
#   scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"))  + 
#   coord_cartesian(expand = FALSE) + 
#   theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
#   guides(fill=guide_legend(ncol=1, reverse = TRUE))

p5<-ggplot(data_country) +
  geom_line(data = data_country, aes(x = time, y = estimated_hospi), 
            col = "deepskyblue4",alpha = 0.7) + 
  geom_line(data = data_country_forecast, 
            aes(x = time, y = estimated_hospi_forecast), 
            col = "deepskyblue3", alpha = 0.7) + 
  # geom_line(data = data_country_cf, 
  #           aes(x = time, y = estimated_deaths_cf), 
  #           col = "red", alpha = 0.5)+
  geom_ribbon(data = data_country, aes(x = time, 
                                       ymin = hospi_min, 
                                       ymax = hospi_max),
              fill="deepskyblue4", alpha=0.5) +
  geom_bar(data = hosp2, aes(x = as.Date(date), y = new_hospi,fill=clasif), 
           stat='identity', alpha=.6)+
  geom_ribbon(data = data_country_forecast, 
              aes(x = time, 
                  ymin = hospi_min, 
                  ymax = hospi_max),
              fill = "deepskyblue3", alpha=0.5) +
  # geom_ribbon(data = data_country_cf, 
  #             aes(x = time, 
  #                 ymin = death_min_cf, 
  #                 ymax = death_max_cf),
  #             fill = "red", alpha=0.35)+
  geom_vline(xintercept = data_country$time[length(data_country$time)], 
             col = "black", linetype = "dashed", alpha = 0.5) + 
  scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
  scale_fill_manual(name = "Resultado SARS-CoV-2",
                    values = c("gold","green","red"))+ 
  xlab("") +
  ylab("Hospitalizaciones diarias") + 
  scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"))  + 
  coord_cartesian(expand = FALSE) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom") + 
  guides(fill=guide_legend(ncol=1, reverse = TRUE))


p6<-ggplot(ocup,aes(x=time)) +
    geom_bar(data = cama_ocup, aes(x = as.Date(Fecha), y = camas,fill = "Observados"), 
            stat='identity', alpha=0.5) +
  geom_line(aes(y=estimated_ocu_c,color="Mediana")) + 
  geom_ribbon(aes(x = time,ymin = ocu_min_c, ymax = ocu_max_c,fill = "95% CrI")) +
  geom_vline(xintercept = data_country$time[length(data_country$time)], 
             col = "black", linetype = "dashed", alpha = 0.5) + 
  scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
  scale_fill_manual(name = "", labels = c("95% CrI","Observados"),
                      values = c(alpha("deepskyblue4", 0.35),alpha("coral3", 0.5))) + 
    scale_color_manual(name = "",
                      values ="black") +
  xlab("") +
  ylab("Ocupación hospitalaria") + 
  scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"))  + 
  coord_cartesian(expand = FALSE) + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom") + 
  guides(fill=guide_legend(ncol=1, reverse = TRUE))


estimated_deaths_forecast <- colMeans(estimated.deaths[,1:N2,1])[N:N2]
estimated_deaths_li_forecast <- colQuantiles(estimated.deaths[,1:N2,1], probs=.025)[N:N2]
estimated_deaths_ui_forecast <- colQuantiles(estimated.deaths[,1:N2,1], probs=.975)[N:N2]
    
estimated_deaths_cf <- cumsum(colMeans(estimated.deaths.cf[,1:N2,1]))
estimated_deaths_li_cf <- cumsum(colQuantiles(estimated.deaths.cf[,1:N2,1], probs=.025))
estimated_deaths_ui_cf <- cumsum(colQuantiles(estimated.deaths.cf[,1:N2,1], probs=.975))
    
predicted_cases <- colMeans(prediction[,1:N,1])
predicted_cases_li <- colQuantiles(prediction[,1:N,1], probs=.025)
predicted_cases_ui <- colQuantiles(prediction[,1:N,1], probs=.975)
predicted_cases_li2 <- colQuantiles(prediction[,1:N,1], probs=.25)
predicted_cases_ui2 <- colQuantiles(prediction[,1:N,1], probs=.75)
    
    
estimated_deaths <- colMeans(estimated.deaths[,1:N,1])
estimated_deaths_li <- colQuantiles(estimated.deaths[,1:N,1], probs=.025)
estimated_deaths_ui <- colQuantiles(estimated.deaths[,1:N,1], probs=.975)
estimated_deaths_li2 <- colQuantiles(estimated.deaths[,1:N,1], probs=.25)
estimated_deaths_ui2 <- colQuantiles(estimated.deaths[,1:N,1], probs=.75)

estimated_hospi <- colMeans(estimated.hospi[,1:N,1])
estimated_hospi_li <- colQuantiles(estimated.hospi[,1:N,1], probs=.025)
estimated_hospi_ui <- colQuantiles(estimated.hospi[,1:N,1], probs=.975)
    
rt <- colMeans(out$Rt_adj[,1:N,1])
rt_li <- colQuantiles(out$Rt_adj[,1:N,1],probs=.025)
rt_ui <- colQuantiles(out$Rt_adj[,1:N,1],probs=.975)
rt_li2 <- colQuantiles(out$Rt_adj[,1:N,1],probs=.25)
rt_ui2 <- colQuantiles(out$Rt_adj[,1:N,1],probs=.75)
    
covariates_country <- covariates[which(covariates$Country == country), 2:8]   
    
covariates_country$self_isolating_if_ill = NULL
covariates_country$sport = NULL 
covariates_country$public_events=NULL
#covariates_country$travel_restrictions = NULL
covariates_country$social_distancing_encouraged=NULL
covariates_country_long <- gather(covariates_country[], key = "key", 
                                      value = "value")
covariates_country_long$x <- rep(NULL, length(covariates_country_long$key))
un_dates <- unique(covariates_country_long$value)
    
    for (k in 1:length(un_dates)){
      idxs <- which(covariates_country_long$value == un_dates[k])
      max_val <- round(max(rt_ui)) + 0.3
      for (j in idxs){
        covariates_country_long$x[j] <- max_val
        max_val <- max_val - 0.3
      }
    }
    
    
    covariates_country_long$value <- mdy(covariates_country_long$value) 
    covariates_country_long$country <- rep(country, 
                                           length(covariates_country_long$value))
    
    data_country <- data.frame("time" = as_date(as.character(dates[[1]])),
                               "country" = rep(country, length(dates[[1]])),
                               "reported_cases" = reported_cases[[1]], 
                               "reported_cases_c" = cumsum(reported_cases[[1]]), 
                               "predicted_cases_c" = cumsum(predicted_cases),
                               "predicted_min_c" = cumsum(predicted_cases_li),
                               "predicted_max_c" = cumsum(predicted_cases_ui),
                               "predicted_min_c2" = cumsum(predicted_cases_li2),
                               "predicted_max_c2" = cumsum(predicted_cases_ui2),
                               "predicted_cases" = predicted_cases,
                               "predicted_min" = predicted_cases_li,
                               "predicted_max" = predicted_cases_ui,
                               "predicted_min2" = predicted_cases_li2,
                               "predicted_max2" = predicted_cases_ui2,
                               "deaths" = deaths_by_country[[1]],
                               "deaths_c" = cumsum(deaths_by_country[[1]]),
                               "estimated_deaths_c" =  cumsum(estimated_deaths),
                               "death_min_c" = cumsum(estimated_deaths_li),
                               "death_max_c"= cumsum(estimated_deaths_ui),
                               "death_min_c2" = cumsum(estimated_deaths_li2),
                               "death_max_c2"= cumsum(estimated_deaths_ui2),
                               "estimated_deaths" = estimated_deaths,
                               "death_min" = estimated_deaths_li,
                               "death_max"= estimated_deaths_ui,
                               "death_min2" = estimated_deaths_li2,
                               "death_max2"= estimated_deaths_ui2,
                               "rt" = rt,
                               "rt_min" = rt_li,
                               "rt_max" = rt_ui,
                               "rt_min2" = rt_li2,
                               "rt_max2" = rt_ui2)
  
    
 
  data_cases_95 <- data.frame(data_country$time, data_country$predicted_min_c, 
                              data_country$predicted_max_c)
  names(data_cases_95) <- c("time", "cases_min", "cases_max")
  data_cases_95$key <- rep("nintyfive", length(data_cases_95$time))
  data_cases_50 <- data.frame(data_country$time, data_country$predicted_min_c2, 
                              data_country$predicted_max_c2)
  names(data_cases_50) <- c("time", "cases_min", "cases_max")
  data_cases_50$key <- rep("fifty", length(data_cases_50$time))
  data_cases <- rbind(data_cases_95, data_cases_50)
  levels(data_cases$key) <- c("ninetyfive", "fifty")
  
    data_cases_95_i <- data.frame(data_country$time, data_country$predicted_min, 
                              data_country$predicted_max)
  names(data_cases_95_i) <- c("time", "cases_min", "cases_max")
  data_cases_95_i$key <- rep("nintyfive", length(data_cases_95_i$time))
  data_cases_50_i <- data.frame(data_country$time, data_country$predicted_min2, 
                              data_country$predicted_max2)
  names(data_cases_50_i) <- c("time", "cases_min", "cases_max")
  data_cases_50_i$key <- rep("fifty", length(data_cases_50_i$time))
  data_cases_i <- rbind(data_cases_95_i, data_cases_50_i)
  levels(data_cases_i$key) <- c("ninetyfive", "fifty") 
  
  data_deaths_95 <- data.frame(data_country$time, data_country$death_min_c, 
                               data_country$death_max_c)
  names(data_deaths_95) <- c("time", "death_min", "death_max")
  data_deaths_95$key <- rep("nintyfive", length(data_deaths_95$time))
  data_deaths_50 <- data.frame(data_country$time, data_country$death_min_c2, 
                               data_country$death_max_c2)
  names(data_deaths_50) <- c("time", "death_min", "death_max")
  data_deaths_50$key <- rep("fifty", length(data_deaths_50$time))
  data_deaths <- rbind(data_deaths_95, data_deaths_50)
  levels(data_deaths$key) <- c("ninetyfive", "fifty")
  
  
  
  
  p4 <- ggplot(data_country) +
    geom_bar(data = data_country, aes(x = time, y = reported_cases,fill = "Observados"), 
            stat='identity', alpha=0.5) + 
    geom_ribbon(data = data_cases_95_i, 
                aes(x = time, ymin = cases_min, ymax = cases_max, fill = "95% CrI")) +
    geom_line(aes(x=time,y=predicted_cases,color="Mediana"))+
    xlab("") +
    ylab("Nuevas infecciones sospechosas, estimados y confirmados") +
    scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
    scale_x_date(date_breaks = "3 days", labels = date_format("%e %b")) + 
    scale_fill_manual(name = "", labels = c("95% CrI","Observados"),
                      values = c(alpha("deepskyblue4", 0.35),alpha("coral3", 0.5))) + 
    scale_color_manual(name = "",
                      values ="black") + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom") + 
    guides(fill=guide_legend(ncol=1))
  
  data_deaths_95 <- data.frame(data_country$time, data_country$death_min_c, 
                               data_country$death_max_c)
  names(data_deaths_95) <- c("time", "death_min", "death_max")
  data_deaths_95$key <- rep("nintyfive", length(data_deaths_95$time))
  data_deaths_50 <- data.frame(data_country$time, data_country$death_min_c2, 
                               data_country$death_max_c2)
  names(data_deaths_50) <- c("time", "death_min", "death_max")
  data_deaths_50$key <- rep("fifty", length(data_deaths_50$time))
  data_deaths <- rbind(data_deaths_95, data_deaths_50)
  levels(data_deaths$key) <- c("ninetyfive", "fifty")
  
  
 times <- as_date(as.character(dates[[1]]))
    times_forecast <- times[length(times)] + 0:14
    data_country_forecast <- data.frame("time" = times_forecast,
                                        "country" = rep(country, 15),
                                        "estimated_deaths_forecast" = estimated_deaths_forecast,
                                        "death_min_forecast" = estimated_deaths_li_forecast,
                                        "death_max_forecast"= estimated_deaths_ui_forecast)
    
   
    times_cf <- times[1] + 0:(N2-1)
    data_country_cf <- data.frame("time" = times_cf,
                                        "country" = rep(country, (N2)),
                                        "estimated_deaths_cf" = estimated_deaths_cf,
                                        "death_min_cf" = estimated_deaths_li_cf,
                                        "death_max_cf"= estimated_deaths_ui_cf)
    
  
  data_deaths <- data_country %>%
    select(time, deaths, estimated_deaths) %>%
    gather("key" = key, "value" = value, -time)
  
  data_deaths_forecast <- data_country_forecast %>%
    select(time, estimated_deaths_forecast) %>%
    gather("key" = key, "value" = value, -time)
  
  # Force less than 1 case to zero
  data_deaths$value[data_deaths$value < 1] <- NA
  data_deaths_forecast$value[data_deaths_forecast$value < 1] <- NA
  data_deaths_all <- rbind(data_deaths, data_deaths_forecast)
  
  p2 <- ggplot(data_country) +
    geom_bar(data = data_country, aes(x = time, y = deaths_c), 
             fill = "coral3", stat='identity', alpha=0.5) + 
    geom_line(data = data_country, aes(x = time, y = estimated_deaths_c), 
              col = "deepskyblue4") + 
    geom_line(data = data_country_forecast, 
              aes(x = time, y = estimated_deaths_forecast), 
              col = "deepskyblue4", alpha = 0.5) + 
    geom_line(data = data_country_cf,
              aes(x = time, y = estimated_deaths_cf),
              col = "red", alpha = 0.5)+
    geom_ribbon(data = data_country, aes(x = time, 
                                         ymin = death_min_c, 
                                         ymax = death_max_c),
                fill="deepskyblue4", alpha=0.3) +
    geom_ribbon(data = data_country_forecast, 
                aes(x = time, 
                    ymin = death_min_forecast, 
                    ymax = death_max_forecast),
                fill = "deepskyblue4", alpha=0.35) +
    geom_ribbon(data = data_country_cf,
                aes(x = time,
                    ymin = death_min_cf,
                    ymax = death_max_cf),
                fill = "red", alpha=0.35)+
    geom_vline(xintercept = data_deaths$time[length(data_deaths$time)], 
               col = "black", linetype = "dashed", alpha = 0.5) + 
    scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
    #scale_fill_manual(name = "", 
    #                 labels = c("Confirmed deaths", "Predicted deaths"),
    #                 values = c("coral4", "deepskyblue4")) + 
    xlab("") +
    ylab("Número acumulado de muertos") + 
    scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"))  + 
    coord_cartesian(ylim=c(0,1000),expand = FALSE) + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
    guides(fill=guide_legend(ncol=1, reverse = TRUE))
  
    p7 <- ggplot(data_country) + 
    geom_line(data = data_country, aes(x = time, y = estimated_deaths), 
              col = "deepskyblue4",alpha = 0.7) + 
    geom_line(data = data_country_forecast, 
              aes(x = time, y = estimated_deaths_forecast), 
              col = "deepskyblue3", alpha = 0.7) + 
    geom_ribbon(data = data_country, aes(x = time, 
                                         ymin = death_min, 
                                         ymax = death_max),
                fill="deepskyblue4", alpha=0.5) +
      geom_bar(data = mort2, aes(x = as.Date(date), y = new_deaths2,fill=clasif), 
           stat='identity', alpha=.6)+
    geom_ribbon(data = data_country_forecast, 
                aes(x = time, 
                    ymin = death_min_forecast, 
                    ymax = death_max_forecast),
                fill = "deepskyblue3", alpha=0.5) +

    geom_vline(xintercept = data_deaths$time[length(data_deaths$time)], 
               col = "black", linetype = "dashed", alpha = 0.5) + 
    scale_y_continuous(labels = scales::comma_format(accuracy = 1),n.breaks = 10)+
      scale_fill_manual(name = "Resultado SARS-CoV-2",
                    values = c("gold","green","red"))+
    xlab("") +
    ylab("Muertes diarias") + 
    scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"))  + 
    coord_cartesian(expand = FALSE) + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom") + 
    guides(fill=guide_legend(ncol=1, reverse = TRUE))
  
    plot_labels <- c("Día de la madre","Extensión del distanciamento social","Uso de tapabocas")
  
  # Plotting interventions
  data_rt_95 <- data.frame(data_country$time, 
                           data_country$rt_min, data_country$rt_max)
  names(data_rt_95) <- c("time", "rt_min", "rt_max")
  data_rt_95$key <- rep("nintyfive", length(data_rt_95$time))
  data_rt_50 <- data.frame(data_country$time, data_country$rt_min2, 
                           data_country$rt_max2)
  names(data_rt_50) <- c("time", "rt_min", "rt_max")
  data_rt_50$key <- rep("fifty", length(data_rt_50$time))
  data_rt <- rbind(data_rt_95, data_rt_50)
  levels(data_rt$key) <- c("ninetyfive", "fifth")
  
  p3 <- ggplot(data_country) +
    geom_stepribbon(data = data_rt_95, aes(x = time, ymin = rt_min, ymax = rt_max, 
                                        group = key,
                                        fill = key)) +
    geom_hline(yintercept = 1, color = 'black', size = 0.1) + 
    geom_step(aes(x=time,y=rt,linetype="Mediana"))+
    scale_linetype_manual(name = "",
                       values ="solid")+
    geom_segment(data = covariates_country_long,
                 aes(x = value, y = 0, xend = value, yend = max(x)), 
                 linetype = "dashed", colour = "black", alpha = 0.75) +
    geom_point(data = covariates_country_long, aes(x = value, 
                                                   y = x, 
                                                   group = key, 
                                                   shape = key, 
                                                   col = key), size = 4) +
    xlab("") +
    scale_y_continuous(n.breaks = 10)+
    ylab(bquote(R[t])) +
    scale_fill_manual(name = "", labels = c("95% CrI"),
                      values = c(alpha("deepskyblue4", 0.35))) + 
    scale_shape_manual(name = "Intervenciones", labels = plot_labels,
                       values = c(21, 22,23)) + 
    scale_colour_discrete(name = "Intervenciones", labels = plot_labels) + 
    scale_x_date(date_breaks = "3 days", labels = date_format("%e %b"), 
                 limits = c(data_country$time[1], 
                            data_country$time[length(data_country$time)])) + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="bottom")+
    guides(shape=guide_legend(ncol=1,nrow=3))
  

confirmados<-as.numeric(mexico %>% filter(iso3c=="MEX") %>% summarise(max=max(confirmed)))
  muertes<-as.numeric(mexico %>% filter(iso3c=="MEX") %>% summarise(max=max(deaths)))
  
  confirmados_oax<-as.numeric(mexico %>% filter(iso3c=="Oaxaca") %>% summarise(max=max(confirmed)))
  muerte_oax<-as.numeric(mexico %>% filter(iso3c=="Oaxaca") %>% summarise(max=max(deaths)))
  
    muertes_cf<-as.numeric(data_country_cf %>% filter(time==Sys.Date()) %>% select(estimated_deaths_cf,death_min_cf,death_max_cf))
  muertes_pred<-as.numeric(data_country_forecast %>% filter(time==Sys.Date()) %>% select(estimated_deaths_forecast,death_min_forecast,death_max_forecast))
  muertes_evitadas<-muertes_cf-muertes_pred
  
  
```


# Introducción 

Mucho se ha hablado en redes sociales acerca del éxito (o fracaso) de las distintas medidas de mitigación que han implementado los distintos gobiernos para reducir la “tasa” de infección por el nuevo coronavirus (SARS-CoV-2) en nuestro país. Hasta el 18 de junio (`r format(max(mexico$date), "%b %e")`) se han confirmado en nuestro país `r formatC(confirmados, format="f", big.mark=",", digits=0)` casos y `r formatC(muertes, format="f", big.mark=",", digits=0)` muertes. Para el estado de Oaxaca, se han confirmado `r formatC(confirmados_oax, format="f", big.mark=",", digits=0)` casos y `r formatC(muerte_oax, format="f", big.mark=",", digits=0)` muertes.


Como ejemplo de lo anterior, hace 3 semanas la Ciudad de México [anunció](https://www.animalpolitico.com/2020/05/cubrebocas-obligatorio-cdmx-evitar-barba-bigote-joyeria-corbata/) que el uso de cubrebocas será obligatorio al transitar por la ciudad mientras que el estado de Oaxaca lo [implementó](https://www.jornada.com.mx/ultimas/estados/2020/04/20/obligatorio-uso-de-cubrebocas-en-espacios-publicos-en-oaxaca-8707.html) desde el 20 de abril. Asimismo, en días recientes se ha debatido acerca del retraso que existe entre el momento en que se realiza la prueba y el momento en que se publica el resultado de ésta en los cortes diarios que hace el gobierno federal. Lo anterior fue [analizado](https://datos.nexos.com.mx/?p=1351#_ftn2) por Jorge Castañeda y Sebastián Garrido para el caso específico de las muertes.


¿Por qué es importante reducir la rapidez con la que se transmite el virus de individuo a individuo? Porque existen ciertos grupos de riesgo en los cuales la enfermedad causada por este nuevo coronavirus (COVID-19) se puede complicar. De acuerdo con la más reciente Encuesta Nacional de Nutrición ([ENSANUT](https://ensanut.insp.mx/) 2018) realizada conjuntamente entre el Instituto Nacional de Salud Pública (INSP) y el Instituto Nacional de Estadística y Geografía (INEGI), aproximadamente 15.2 millones de mexicanos tienen diagnóstico previo de hipertensión mientras que el 75.2% de la población mayor a 2 años tiene obesidad y sobrepeso. En este sentido, la Secretaría de Salud ha reportado en sus informes técnicos diarios que los 3 principales grupos en riesgo de presentar complicaciones por COVID-19 son: personas mayores a 65 años, personas con Diabetes Mellitus (diagnosticada y no diagnosticada) y personas con hipertensión arterial.

Para poder estudiar la posible reducción de infecciones y la aplicación de esta medida de mitigación es necesario introducir el número básico de reproducción $R_0$ Este número mide en promedio cuántas personas son infectadas por una persona con la infección en una población susceptible, de tal manera que este número cuantifica la rapidez con la que se transmite el virus en una población determinada. Dado que $R_0$ puede cambiar en el tiempo debido a la aplicación de distintas medidas (o relajación de éstas), se introduce el número de efectivo de reproducción $R_t$, teniendo la misma definición que $R_0$ pero ahora a tiempo $t$ En nuestro país, el gobierno federal y los gobiernos estatales han implementado diferentes medidas de mitigación con el objetivo de disminuir $R_t$, asumiendo que al hacerlo, disminuiría el número de infectados por SARS-CoV-2 y, en consecuencia, un número menor de hospitalizaciones y muertes. Si  $R_t<1$ entonces se podría afirmar que la transmisión está bajo control; por lo tanto, se podrían retirar una o varias medidas de mitigación.

Para tomar la mejor decisión es necesario contar con la mejor evidencia disponible. Los datos que son presentados diariamente difícilmente representan el estado actual de la epidemia en los distintos estados país; por consiguiente, esto ha complicado la toma de decisiones en el contexto de la actual pandemia. En términos estadísticos, el desfase de muertes reportadas versus la fecha de defunción puede ser ajustado como lo hizo Humberto [González](https://datos.nexos.com.mx/?p=1406) y podría ser incluido en cualquier modelo de predicción. De otro modo, este artículo utiliza los datos de hospitalizaciones y muertes hospitalarias en el estado de Oaxaca para predecir las nuevas hospitalizaciones y muertes diarias que ocurrirán en el transcurso del tiempo.

Para lograr lograr lo anterior, se utilizó un modelo jerárquico Bayesiano semi-mecanístico^[Es semi-mecanístico ya que utiliza la estructura de los modelos compartimentales pero sin la necesidad de especificar el sistema de ecuaciones diferenciales.] el cual utiliza el número de muertes y hospitalizaciones diarias para así estimar el número de pacientes infectados, el número básico y efectivo de reproducción y finalmente el impacto que han tenido diferentes medidas de mitigación en $R_t$. La [metodología](https://juandiazmart.github.io/blog/) sigue lo propuesto por el reporte 13 del [Imperial College](https://www.imperial.ac.uk/mrc-global-infectious-disease-analysis/covid-19/report-13-europe-npi-impact/). Con respecto al modelo original, se hicieron dos grandes cambios:

1. **Población**. Se utilizan los datos proporcionados por la Secretaría de Salud (SS) estatal ya que presentan sólo un retraso de 2 días aproximadamente, en comparación con los datos a nivel federal. Adicionalmente, utilizamos todos los hospitalizados que tuvieran sospecha de COVID-19 al momento de ser ingresados y que se les haya realizado la prueba para detectar la enfermedad. Se decidió hacerlo de esta manera ya que todos las personas con sospecha van a hospitales designados COVID-19 en el estado de Oaxaca y representará una cama ocupada. De esta manera, también se controla por el desfase en el resultado de la prueba ya que los sospechosos son incluidos en esta base. De acuerdo con los datos con los que se realizó este trabajo, en promedio el 66% de los sospechosos resultan positivos a SARS-CoV-2, lo cual implica que incluirlos en nuestro análisis no representaría un sesgo importante.


2. **Hospitalizaciones**. El modelo semi-mecanístico fue modificado para incorporar las nuevas hospitalizaciones que se presentan día con día. 


# Prediciendo las muertes y hospitalizaciones diarias

Antes de describir los resultados, las Figuras \@ref(fig:sin) y \@ref(fig:con) muestran el porcentaje de ocupación hospitalaria por tipo de cama (sin y con ventilador) en los distintos municipios del estado de Oaxaca. El estado cuenta hasta el 19 de junio con 443 camas para sospechosos por SARS-CoV-2, de las cuales 337 son camas sin ventilador y 106 con ventilador; tanto la costa como Oaxaca capital han tenido niveles altos de ocupación hospitalaria en los últimos días. Como ejemplo, al menos 3 hospitales en la capital se encuentran con una ocupación del 100% respecto a camas con ventilador. Si bien la ocupación hospitalaria en todo el estado para el 18 de junio es del 55.8% para camas sin ventilador y del 49.1% para aquellas con ventilador, los municipios más grandes son los que tienen el mayor porcentaje de ocupación.

```{r sin,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap="Proporción de ocupación hospitalaria de camas sin ventilador. Las etiquetas solamente corresponden a aquellos municipios con una ocupación mayor o igual al 50%."}
q+labs(subtitle = "Camas sin ventilador")
```

```{r con,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap=" Proporción de ocupación hospitalaria de camas con ventilador. Las etiquetas solamente corresponden a aquellos municipios con una ocupación mayor o igual al 50%."}
r+labs(subtitle = "Camas con ventilador")
```


El modelo estima que para el 18 de Junio, el número acumulado de casos con sospecha por infección de SARS-CoV-2 en Oaxaca es de `r formatC(tail(data_country[,"predicted_cases_c"],1), format="f", big.mark=",", digits=0)` (95% CrI: `r paste(formatC(tail(data_country[,"predicted_min_c"],1), format="f", big.mark=",", digits=0),"-",formatC(tail(data_country[,"predicted_max_c"],1), format="f", big.mark=",", digits=0))`) (ver Figura \@ref(fig:infect)). Lo anterior representa al `r percent(tail(data_country[,"predicted_cases_c"],1)/pop)` (95% CrI: `r paste(percent(tail(data_country[,"predicted_min_c"],1)/pop),"-",percent(tail(data_country[,"predicted_max_c"],1)/pop))`) de la población total en Oaxaca, utilizando los datos de CONAPO para 2020 (4.1 millones aproximadamente)


Un gran porcentaje de estos 124 mil habitantes son positivos a SARS-CoV-2 (punto 1 anterior). Para llegar a esta estimación, se utiliza el porcentaje de hospitalizados del universo de personas que han sidos estudiados por posible COVID-19 (35%). Adicionalmente, la Figura \@ref(fig:infect) muestra el histograma de los casos confirmados que el gobierno federal reporta día con día para el estado de Oaxaca. Mientras la predicción de casos sospechosos aumenta, los datos reportados por el gobierno federal muestran un comportamiento irregular debido a lo ya discutido con anterioridad.


```{r infect,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap="Nuevas posibles infecciones por SARS-Cov-2. La región azul representa la incertidumbre de nuestra estimación mientras que la línea negra representa la mediana de las simulaciones en el tiempo. El histograma representa los casos confirmados reportados diariamente por la S. Salud federal para el estado de Oaxaca a las 7 pm."}
p4+labs(title = "Nuevos posibles casos de infección por sospecha de SARS-CoV-2",
  caption = "Datos: SS Oaxaca",
        subtitle = paste("Datos hasta", format(max(mexico$date), "%b %e, %Y"),"Oaxaca"))+ 
   theme(plot.title = element_text(size = rel(1), face = "bold"),
         plot.subtitle = element_text(size = rel(1)),
         axis.text.y = element_text(size = rel(1)),
         axis.title.x = element_text(size = rel(1)),
         axis.title.y = element_text(size = rel(1)),
         axis.text.x = element_text(size = rel(1)),
         legend.text = element_text(size = rel(1)),
         panel.grid.major = element_line(colour = "grey90", size = .1),
         panel.background = element_blank(),
         axis.line = element_line(colour = "grey50", size = .9))
```


Al inicio de la epidemia en México, el número efectivo de reproducción $R_t$  (ver Figura \@ref(fig:repro)) era de `r formatC(head(data_country[,"rt"],1), format="f", big.mark=",", digits=1)` (95% CrI: `r paste(formatC(head(data_country[,"rt_min"],1), format="f", big.mark=",", digits=1),"-",formatC(head(data_country[,"rt_max"],1), format="f", big.mark=",", digits=1))`). Un ejemplo del efecto de una medida de mitigación es el uso de cubrebocas.Después de que el gobierno estatal implementó esta medida el 21 de abril, el número efectivo de reproducción descendió a `r formatC(tail(data_country[,"rt"],1), format="f", big.mark=",", digits=1)` (95% CrI: `r paste(formatC(tail(data_country[,"rt_min"],1), format="f", big.mark=",", digits=1),"-",formatC(tail(data_country[,"rt_max"],1), format="f", big.mark=",", digits=1))`). Si bien la diferencia puntual no fue mucha con respecto a cuando se extendió la Jornada Nacional de Sana Distancia, lo que sí cambió fue la incertidumbre alrededor de $R_t$ Esto se debe a que las medidas como el uso de cubrebocas se han observado durante más tiempo en comparación con el tiempo entre el inicio de la epidemia y la primera medida de mitigación. Asimismo, se observa que después del día de la madre el número efectivo de reproducción no ha cambiado considerablemente.


```{r repro,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap="Impacto de las medidas de mitigación en el número efectivo de reproducción."}
p3+labs(title = "Número efectivo de reproducción",
  caption = "Datos: SS Oaxaca",
        subtitle = paste("Datos hasta", format(max(mexico$date), "%b %e, %Y"),"Oaxaca"))+ 
   theme(plot.title = element_text(size = rel(1), face = "bold"),
         plot.subtitle = element_text(size = rel(1)),
         axis.text.y = element_text(size = rel(1)),
         axis.title.x = element_text(size = rel(1)),
         axis.title.y = element_text(size = rel(1)),
         axis.text.x = element_text(size = rel(1)),
         legend.text = element_text(size = rel(1)),
         panel.grid.major = element_line(colour = "grey90", size = .1),
         panel.background = element_blank(),
         axis.line = element_line(colour = "grey50", size = .9))
```


La siguiente gráfica muestra las hospitalizaciones diarias estratificadas por resultado de la prueba. Se observa un mayor número de casos sin resultado de prueba en los últimos aunque hay algunos pacientes que fueron hospitalizados y hasta el día de hoy no se sabe el resultado. Recordemos que los últimos dos días tiene un retraso por lo que la caída observada es por lo anterior y no por un descenso en las hospitalizaciones.

```{r hospi,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap= "Nuevas hospitalizaciones por sospecha de SARS-CoV-2, observados y predichos. La región azul representa el intervalo de predicción (95%) de las nuevas observaciones. El histograma representa las hospitalizaciones observadas.",preview=T}
p5+labs(title = "Nuevas hospitalizaciones por sospecha de SARS-CoV-2",
  caption = "Datos: SS Oaxaca",
        subtitle = paste("Datos hasta", format(max(mexico$date), "%b %e, %Y"),"Oaxaca"))+ 
   theme(plot.title = element_text(size = rel(1), face = "bold"),
         plot.subtitle = element_text(size = rel(1)),
         axis.text.y = element_text(size = rel(1)),
         axis.title.x = element_text(size = rel(1)),
         axis.title.y = element_text(size = rel(1)),
         axis.text.x = element_text(size = rel(1)),
         legend.text = element_text(size = rel(1)),
         panel.grid.major = element_line(colour = "grey90", size = .1),
         panel.background = element_blank(),
         axis.line = element_line(colour = "grey50", size = .9))
```

La Figura \@ref(fig:muerte) muestra lo mismo que lo anterior pero ahora parte el número de muertes diarias. El modelo estimó que la probabilidad de morir por haber sido hospitalizado es de 49% (95 CrI: 40% - 60%). El modelo predice que podrán haber hasta 45 muertes diarias por sospecha de SARS-CoV-2 el primero de julio.

```{r muerte,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap= "Nuevas muertes por sospecha de COVID-19, observados y predichos.",preview=T}
p7+labs(title = "Nuevas muertes por sospecha de SARS-CoV-2",
  caption = "Datos: SS Oaxaca",
        subtitle = paste("Datos hasta", format(max(mexico$date), "%b %e, %Y"),"Oaxaca"))+ 
   theme(plot.title = element_text(size = rel(1), face = "bold"),
         plot.subtitle = element_text(size = rel(1)),
         axis.text.y = element_text(size = rel(1)),
         axis.title.x = element_text(size = rel(1)),
         axis.title.y = element_text(size = rel(1)),
         axis.text.x = element_text(size = rel(1)),
         legend.text = element_text(size = rel(1)),
         panel.grid.major = element_line(colour = "grey90", size = .1),
         panel.background = element_blank(),
         axis.line = element_line(colour = "grey50", size = .9))
```


```{r ,message=FALSE, warning=FALSE, tidy=TRUE,fig.width=8, fig.height=7,fig.cap= "Nuevas muertes por sospecha de COVID-19, observados y predichos.",preview=T}
p6+labs(title = "Ocupación hospitalaria por sospecha de SARS-CoV-2",
  caption = "Datos: SS Oaxaca",
        subtitle = paste("Datos hasta", format(max(mexico$date), "%b %e, %Y"),"Oaxaca"))+ 
   theme(plot.title = element_text(size = rel(1), face = "bold"),
         plot.subtitle = element_text(size = rel(1)),
         axis.text.y = element_text(size = rel(1)),
         axis.title.x = element_text(size = rel(1)),
         axis.title.y = element_text(size = rel(1)),
         axis.text.x = element_text(size = rel(1)),
         legend.text = element_text(size = rel(1)),
         panel.grid.major = element_line(colour = "grey90", size = .1),
         panel.background = element_blank(),
         axis.line = element_line(colour = "grey50", size = .9))
```
# ¿Y lo anterior qué implica?

La medicina basada en la evidencia busca tomar decisiones en salud con información sintetizada de manera sistemática y con un alto grado de nivel científico. Si bien es entendible que parte de la población necesita salir a trabajar, los gobiernos estatales necesitan utilizar información más robusta para realmente dimensionar el tamaño de la epidemia en su localidad. De esta manera, si se cuenta con la mejor evidencia posible, entonces es posible que se tomen las mejores decisiones para que la población no siga sufriendo de los estragos económicos y en salud que ha dejado esta epidemia. En días recientes, el Dr. Hugo López-Gatell [comentó](https://www.milenio.com/estados/valle-mexico-epidemia-acaba-hugo-lopez-gatell) que Oaxaca tiene un patrón de descenso muy sostenido, ya que de acuerdo con el modelo del gobierno federal se llegó a la cumbre de contagios en la fecha que se había predicho. Los resultados de este análisis sugieren que no hay evidencia de que la epidemia en el estado de Oaxaca no ha llegado a la cumbre de contagios, al menos con los datos observados hasta el 18 de junio. 

Este análisis también encontró que casi la mitad de los hospitalizados por sospecha de SARS-CoV-2 fallecen, lo que sugiere que hay una importante cantidad de pacientes que llegan al hospital con un gran deterioro. A nuestro juicio lo anterior debe ser estudiado a mayor profundidad ya que no es claro por qué la gente fallece tanto y tan rápido.

Una de las limitaciones de este análisis es la inclusión de todos los hospitalizados (positivos, negativos y sospechosos) ya que podría existir un sesgo. Por ejemplo, existe la posibilidad de que el tiempo de hospitalización hasta el egreso (ya sea alta o defunción) sea diferente entre estos 3 grupos. La hipótesis inicial es que este tiempo es muy similar entre los 3 grupos.

Este artículo proporciona evidencia de que el uso del cubrebocas así como otras medidas de mitigación han ayudado a reducir el número efectivo de reproducción en el estado de Oaxaca. Es necesario de seguir insistiendo en mejores datos para mejores decisiones. Ante tanta incertidumbre que genera la epidemia en diferentes desenlaces en salud y económicos, los datos siempre serán una herramienta importante para poder cuantificar ésta.

`@juandiazmart` `@BertisD`

*Agradezco a la Dirección de Prevención y Promoción de la Salud del estado de Oaxaca por la oportunidad de colaborar en el análisis de los datos.*
